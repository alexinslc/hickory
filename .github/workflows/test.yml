name: Test Suite

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # .NET API Tests
  test-api:
    name: API Tests (.NET 9.0)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore apps/api/Hickory.Api.csproj

      - name: Build API
        run: dotnet build apps/api/Hickory.Api.csproj --no-restore --configuration Release

      - name: Build API Test Project
        run: dotnet build apps/api/Hickory.Api.Tests/Hickory.Api.Tests.csproj --no-restore --configuration Release

      - name: Run API Unit Tests
        run: dotnet test apps/api/Hickory.Api.Tests/Hickory.Api.Tests.csproj --no-build --verbosity normal --configuration Release --logger "trx;LogFileName=test-results.trx"

      - name: Publish Test Results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: .NET API Test Results
          path: '**/test-results.trx'
          reporter: dotnet-trx
          fail-on-error: true

      - name: Generate Code Coverage
        run: |
          dotnet test apps/api/Hickory.Api.Tests/Hickory.Api.Tests.csproj \
            --configuration Release \
            --no-build \
            --collect:"XPlat Code Coverage" \
            --results-directory ./coverage

      - name: Upload Coverage Reports
        uses: codecov/codecov-action@v4
        if: always()
        with:
          directory: ./coverage
          flags: api
          name: api-coverage
          fail_ci_if_error: false

  # Web App Tests (Jest + React Testing Library)
  test-web:
    name: Web Tests (Next.js + Jest)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Web Unit Tests
        run: npx nx test web --coverage --ci

      - name: Upload Coverage Reports
        uses: codecov/codecov-action@v4
        if: always()
        with:
          directory: ./coverage/apps/web
          flags: web
          name: web-coverage
          fail_ci_if_error: false

  # CLI Tests
  test-cli:
    name: CLI Tests (Node.js + Jest)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run CLI Unit Tests
        run: npx nx test cli --ci

  # E2E Tests (Playwright)
  test-e2e:
    name: E2E Tests (Playwright)
    runs-on: ubuntu-latest
    needs: [test-api, test-web]  # Only run E2E if unit tests pass

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Start API (Background)
        run: |
          cd apps/api
          dotnet run --no-launch-profile &
          echo "API_PID=$!" >> $GITHUB_ENV
        env:
          ASPNETCORE_ENVIRONMENT: Development

      - name: Wait for API
        run: |
          timeout 60 bash -c 'until curl -f http://localhost:5000/health; do sleep 2; done' || exit 1

      - name: Run E2E Tests
        run: npx nx e2e web-e2e
        env:
          CI: true

      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: apps/web-e2e/playwright-report/
          retention-days: 30

      - name: Stop API
        if: always()
        run: kill $API_PID || true

  # Test Summary
  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [test-api, test-web, test-cli, test-e2e]
    if: always()

    steps:
      - name: Check Test Results
        run: |
          if [ "${{ needs.test-api.result }}" == "failure" ] || \
             [ "${{ needs.test-web.result }}" == "failure" ] || \
             [ "${{ needs.test-cli.result }}" == "failure" ] || \
             [ "${{ needs.test-e2e.result }}" == "failure" ]; then
            echo "❌ Some tests failed"
            exit 1
          else
            echo "✅ All tests passed!"
          fi
